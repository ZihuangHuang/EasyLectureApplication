/**
 * This file was auto-generated by Fern from our API Definition.
 */
package api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CheckApiKeyResponse.Builder.class)
public final class CheckApiKeyResponse {
    private final boolean valid;

    private final Optional<String> organizationId;

    private final Optional<String> ownerId;

    private final Map<String, Object> additionalProperties;

    private CheckApiKeyResponse(
            boolean valid,
            Optional<String> organizationId,
            Optional<String> ownerId,
            Map<String, Object> additionalProperties) {
        this.valid = valid;
        this.organizationId = organizationId;
        this.ownerId = ownerId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("valid")
    public boolean getValid() {
        return valid;
    }

    @JsonProperty("organization_id")
    public Optional<String> getOrganizationId() {
        return organizationId;
    }

    @JsonProperty("owner_id")
    public Optional<String> getOwnerId() {
        return ownerId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CheckApiKeyResponse && equalTo((CheckApiKeyResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CheckApiKeyResponse other) {
        return valid == other.valid && organizationId.equals(other.organizationId) && ownerId.equals(other.ownerId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.valid, this.organizationId, this.ownerId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ValidStage builder() {
        return new Builder();
    }

    public interface ValidStage {
        _FinalStage valid(boolean valid);

        Builder from(CheckApiKeyResponse other);
    }

    public interface _FinalStage {
        CheckApiKeyResponse build();

        _FinalStage organizationId(Optional<String> organizationId);

        _FinalStage organizationId(String organizationId);

        _FinalStage ownerId(Optional<String> ownerId);

        _FinalStage ownerId(String ownerId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ValidStage, _FinalStage {
        private boolean valid;

        private Optional<String> ownerId = Optional.empty();

        private Optional<String> organizationId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(CheckApiKeyResponse other) {
            valid(other.getValid());
            organizationId(other.getOrganizationId());
            ownerId(other.getOwnerId());
            return this;
        }

        @Override
        @JsonSetter("valid")
        public _FinalStage valid(boolean valid) {
            this.valid = valid;
            return this;
        }

        @Override
        public _FinalStage ownerId(String ownerId) {
            this.ownerId = Optional.of(ownerId);
            return this;
        }

        @Override
        @JsonSetter(value = "owner_id", nulls = Nulls.SKIP)
        public _FinalStage ownerId(Optional<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }

        @Override
        public _FinalStage organizationId(String organizationId) {
            this.organizationId = Optional.of(organizationId);
            return this;
        }

        @Override
        @JsonSetter(value = "organization_id", nulls = Nulls.SKIP)
        public _FinalStage organizationId(Optional<String> organizationId) {
            this.organizationId = organizationId;
            return this;
        }

        @Override
        public CheckApiKeyResponse build() {
            return new CheckApiKeyResponse(valid, organizationId, ownerId, additionalProperties);
        }
    }
}
