/**
 * This file was auto-generated by Fern from our API Definition.
 */
package api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.util.*;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ClassifyDataMetrics.Builder.class)
public final class ClassifyDataMetrics {
    private final Optional<List<LabelMetric>> labelMetrics;

    private final Map<String, Object> additionalProperties;

    private ClassifyDataMetrics(Optional<List<LabelMetric>> labelMetrics, Map<String, Object> additionalProperties) {
        this.labelMetrics = labelMetrics;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("label_metrics")
    public Optional<List<LabelMetric>> getLabelMetrics() {
        return labelMetrics;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClassifyDataMetrics && equalTo((ClassifyDataMetrics) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClassifyDataMetrics other) {
        return labelMetrics.equals(other.labelMetrics);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.labelMetrics);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<LabelMetric>> labelMetrics = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ClassifyDataMetrics other) {
            labelMetrics(other.getLabelMetrics());
            return this;
        }

        @JsonSetter(value = "label_metrics", nulls = Nulls.SKIP)
        public Builder labelMetrics(Optional<List<LabelMetric>> labelMetrics) {
            this.labelMetrics = labelMetrics;
            return this;
        }

        public Builder labelMetrics(List<LabelMetric> labelMetrics) {
            this.labelMetrics = Optional.of(labelMetrics);
            return this;
        }

        public ClassifyDataMetrics build() {
            return new ClassifyDataMetrics(labelMetrics, additionalProperties);
        }
    }
}
