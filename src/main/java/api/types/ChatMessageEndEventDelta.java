/**
 * This file was auto-generated by Fern from our API Definition.
 */
package api.types;

import com.cohere.api.core.ObjectMappers;
import com.cohere.api.types.ChatFinishReason;
import com.cohere.api.types.Usage;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ChatMessageEndEventDelta.Builder.class)
public final class ChatMessageEndEventDelta {
    private final Optional<ChatFinishReason> finishReason;

    private final Optional<Usage> usage;

    private final Map<String, Object> additionalProperties;

    private ChatMessageEndEventDelta(
            Optional<ChatFinishReason> finishReason, Optional<Usage> usage, Map<String, Object> additionalProperties) {
        this.finishReason = finishReason;
        this.usage = usage;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("finish_reason")
    public Optional<ChatFinishReason> getFinishReason() {
        return finishReason;
    }

    @JsonProperty("usage")
    public Optional<Usage> getUsage() {
        return usage;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ChatMessageEndEventDelta && equalTo((ChatMessageEndEventDelta) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ChatMessageEndEventDelta other) {
        return finishReason.equals(other.finishReason) && usage.equals(other.usage);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.finishReason, this.usage);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<ChatFinishReason> finishReason = Optional.empty();

        private Optional<Usage> usage = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ChatMessageEndEventDelta other) {
            finishReason(other.getFinishReason());
            usage(other.getUsage());
            return this;
        }

        @JsonSetter(value = "finish_reason", nulls = Nulls.SKIP)
        public Builder finishReason(Optional<ChatFinishReason> finishReason) {
            this.finishReason = finishReason;
            return this;
        }

        public Builder finishReason(ChatFinishReason finishReason) {
            this.finishReason = Optional.of(finishReason);
            return this;
        }

        @JsonSetter(value = "usage", nulls = Nulls.SKIP)
        public Builder usage(Optional<Usage> usage) {
            this.usage = usage;
            return this;
        }

        public Builder usage(Usage usage) {
            this.usage = Optional.of(usage);
            return this;
        }

        public ChatMessageEndEventDelta build() {
            return new ChatMessageEndEventDelta(finishReason, usage, additionalProperties);
        }
    }
}
